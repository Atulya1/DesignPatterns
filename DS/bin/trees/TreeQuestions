1) Check if a Binary Tree is BST   - inorder traversal
2) Convert a given Binary Tree to Doubly Linked List
3) Inorder Tree Traversal without recursion and without stack 
4) Level order traversal line by line
5) Construct Tree from given Inorder and Preorder traversals
6) Construct Full Binary Tree from given preorder and postorder traversals
7) Find distance between two nodes of a Binary Tree
8) Two nodes of a BST are swapped, correct the BST
9) Print Left View of a Binary Tree
10) Flatten a binary tree into linked list
11) Find Minimum Depth of a Binary Tree
12) Maximum Path Sum in a Binary Tree
13) Check if a given array can represent Preorder Traversal of Binary Search Tree
14) Check whether a binary tree is a full binary tree or not
15) Bottom View Binary Tree
16) Print Nodes in Top View of Binary Tree
17) Remove nodes on root to leaf paths of length < K
18) Lowest Common Ancestor in a Binary Search Tree
19) Check if a binary tree is subtree of another binary tree
20) Reverse alternate levels of a perfect binary trees
Convert a given tree to its Sum Tree
Determine if Two Trees are Identical
Binary Tree Zigzag Level Order Traversal    